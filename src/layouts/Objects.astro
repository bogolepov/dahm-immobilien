---
import { Icon } from 'astro-icon/components';

import dahm from '@data/dahm.json';
import ExternalService from '@vue/cookie/ExternalService.vue';
const { objects } = dahm;
objects.sort((obj1, obj2) => {
	let res: number = obj1.address.str.toLowerCase().localeCompare(obj2.address.str.toLowerCase(), 'de');
	if (!res) res = obj1.address.number.toLowerCase().localeCompare(obj2.address.number.toLowerCase(), 'de');
	if (!res) res = obj1.address.city.toLowerCase().localeCompare(obj2.address.city.toLowerCase(), 'de');
	return res;
});

---

<article class='s-objects'>
	<p class='text-block mb0 mt0'>
		Derzeit verwaltet <span class='company-name-bold'>{dahm.company_name}</span> zahlreiche Objekte unterschiedlicher Art in Hagen und Umgebung:
	</p>
	<ul class='text-block obj-types mt05'>
		{
			dahm.object_types.map(type => {
				return <li>{type.title_plural}</li>;
			})
		}
	</ul>
	<p class="text-block mt05">Unten sehen Sie eine Karte mit verwalteten Objekten.</p>
	<div class='map-container'>
		<ExternalService client:only='vue' type='open_street_map'>
			<iframe
			class='map-objects'
			frameborder='0'
			allowfullscreen
			allow='geolocation'
			src='//umap.openstreetmap.fr/de/map/dahm-immobilien-verwaltung-gmbh_1194597#10/51.3834/7.4487?scaleControl=false&miniMap=false&scrollWheelZoom=false&zoomControl=true&editMode=disabled&moreControl=true&searchControl=null&tilelayersControl=null&embedControl=null&datalayersControl=true&onLoadPanel=none&captionBar=false&captionMenus=true'
		>
	</iframe>
		</ExternalService>
	</div>
	<ul class='obj-list'>
		{
			objects.map(object => {
				const objectName = dahm.object_types.find(type => type.sid === object.type)?.title;
				const objectAddress = `${object.address.str} ${object.address.number}, ${object.address.plz} ${object.address.city}`;
				return (
					<li>
						<p class='object-address' tabindex="0" role="button" aria-expanded='false'>
							{objectAddress}
						</p>
						<div class='object-card' inert>
							{object.person && (
								<div>
									{objectName && (
											<p class='card-title new-part'>Objekt</p>
											<p class='marg-l'>{objectName}</p>
									)}
									<p class='card-title new-part'>Ansprechpartner</p>
									{object.person.map((item, index) => {
										const who = dahm.team.find(t => t.sid === item);
										if (!who) return null;
										return (
											<div class='icon-flex marg-t1' class:list={[{'marg-t2': index>0}]}>
												<Icon name='person' />
												<p class="person-name">{who.name} {who.lastname}</p>
											</div>
											<div class='icon-flex'>
												<Icon name='email' />
												<a href={'mailto:' + who.email} aria-label={`${who.name} ${who.lastname} E-Mail-Adresse`}>
													{who.email}
												</a>
											</div>
											<div class='icon-flex'>
												<Icon name='phone' />
												<a href={'tel:' + who.telephone.replaceAll(' ', '')} aria-label={`${who.name} ${who.lastname} Telefonnummer`}>
													{who.telephone}
												</a>
											</div>
										);
									})}
									{
										object.google &&
										<p class='card-title new-part'>
										<a href={object.google} target='_blank' rel='noopener external'>
											Auf Google Maps
										</a>
									</p>
									}
									
								</div>
							)}
						</div>
					</li>
				);
			})
		}
	</ul>
</article>

<style>
	.s-objects .map-container {
		--map-height: min(calc((100vh - var(--header-height)) * 0.9), calc(1.2 * 100vw));
		width: 100%;
		height: var(--map-height);
		min-height: 300px;
		max-height: 500px;
	}
		.s-objects .map-objects {
		width: 100%;
		height: 100%;
	}

	.s-objects > p {
		margin-top: 2em;
		margin-bottom: 2em;
		font-size: calc(var(--font-size) * 1.05);
	}

	.s-objects .obj-types {
		list-style: disc;
		padding-left: 2.5em;
	}

	.s-objects .mt05 {
		margin-top: 0.5em;
	}

	.s-objects .object-address {
		/* display: flex; */
		cursor: pointer;
		margin: 0.1em 0 0.3em 0;
		width: max-content;
	}
	.s-objects .object-card {
		transform-origin: 0 0;
		overflow: hidden;
		transition: max-height 500ms ease-in-out;
		max-height: 0;
	}
	.s-objects .object-card > div {
		padding: 0 0 0.7em 2.5em;
	}

	.object-card .card-title {
		font-weight: 500;
		font-size: 0.9em;
	}
	.object-card .person-name {
		font-weight: 500;
	}
  @supports (font-variation-settings: 'wght' 560) {
    .object-card .card-title,
		.object-card .person-name {
			font-weight: 560;
		}
	}
	
	.object-card .new-part {
		padding-top: 0.4em;
	}
	.object-card .marg-t1 {
		margin-top: 0.3em;
	}
	.object-card .marg-t2 {
		margin-top: 0.7em;
	}
	.object-card .marg-l {
		margin-left: 1.5em;
	}
	.object-card .icon-flex {
		column-gap: 0.5em;
		margin-left: 1.5em;
		min-width: 13em;
	}

	.s-objects .obj-list {
		margin-top: 2em;
		margin-bottom: 2em;
		columns: 290px auto;
	}
	.s-objects .obj-list li {
		break-inside: avoid-column;
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const objectItems = document.querySelectorAll<HTMLElement>('.object-address');
		objectItems.forEach(item =>
			{
				item.addEventListener('click', () => {
					const card = item.nextElementSibling;
					if (!card || !(card instanceof HTMLElement)) return;

					if (card.style.maxHeight) {
						card.style.maxHeight = '';
						card.setAttribute('inert', '');
						item.setAttribute('aria-expanded', 'false');
					} else {
						objectItems.forEach(obj => {
							const aCard = obj.nextElementSibling;
							if (aCard && aCard !== card && aCard instanceof HTMLElement) {
								aCard.style.maxHeight = ''; 
								aCard.setAttribute('inert', '');
								obj.setAttribute('aria-expanded', 'false');
							}
						});
						card.style.maxHeight = card.scrollHeight + 'px';
						card.removeAttribute('inert');
						item.setAttribute('aria-expanded', 'true');
					}
				}); 

				item.addEventListener('keyup', e => {
					if (e instanceof KeyboardEvent && ('Enter' === e.code || 'Space' === e.code)) {
						item.dispatchEvent(new Event("click"));
					}
				});
			}
		);
	});
</script>
